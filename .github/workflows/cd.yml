name: Continuous Deployment

on:
  release:
    types: [created]

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: ${{ secrets.GCP_REGION }}
  SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
  IMAGE_REPO: ${{ secrets.IMAGE_REPO }}

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: . # ไดเรกทอรีที่มีไฟล์ Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/php-docker-gcp:${{ github.sha }}
        file: Dockerfile # เส้นทางไฟล์ Dockerfile

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: php-artifacts
        path: php-1
      
        
  deploy:
    name: Deploy to GCP
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download artifact  
      uses: actions/download-artifact@v3
      with:
        name: php-artifacts
        
    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}

    - name: Configure Docker credentials
      run: |-
        gcloud --quiet auth configure-docker \
        --project=${{ secrets.GCP_PROJECT_ID }} \
        --verbosity=error

    - name: Push image to Artifact Registry  
      run: |-
        docker push ${{ secrets.ARTIFACT_REGISTRY_HOSTNAME }}/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_REPO }}:${{ github.sha }}

    - name: Deploy to Cloud Run
      run: |-
        gcloud run deploy ${{ env.SERVICE_NAME }} \
        --region=${{ env.GCP_REGION }} \
        --image=${{ secrets.ARTIFACT_REGISTRY_HOSTNAME }}/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_REPO }}:${{ github.sha }} \
        --port=8080